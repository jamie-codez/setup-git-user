name: Release

on:
  push:
    branches: [ main ]

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'

      - name: Install dependencies
        run: npm install -g semantic-release @semantic-release/github @semantic-release/changelog @semantic-release/git

      - name: Create semantic-release config
        run: |
          cat > .releaserc.json << 'EOF'
          {
            "branches": ["main"],
            "plugins": [
              "@semantic-release/commit-analyzer",
              "@semantic-release/release-notes-generator",
              "@semantic-release/changelog",
              "@semantic-release/github",
              ["@semantic-release/git", {
                "assets": ["CHANGELOG.md"],
                "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
              }]
            ]
          }
          EOF

      - name: Run tests before release
        uses: ./
        with:
          username: 'Release Test User'
          email: 'release.test@example.com'

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release

      - name: Cleanup
        if: always()
        run: rm -f .releaserc.json

  test-release:
    name: Test Released Action
    runs-on: ubuntu-latest
    needs: release
    
    steps:
      - name: Test released action
        uses: ./
        with:
          username: 'Release Test'
          email: 'release@example.com'

      - name: Verify released action
        run: |
          echo "Testing released action..."
          USER_NAME=$(git config --global user.name)
          if [ "$USER_NAME" != "Release Test" ]; then
            echo "❌ Released action test failed"
            exit 1
          fi
          echo "✅ Released action test passed"

  notify-marketplace:
    name: Notify Marketplace
    runs-on: ubuntu-latest
    needs: [ release, test-release ]
    
    steps:
      - name: Marketplace notification
        run: |
          echo "🎉 New release published to GitHub Marketplace!"
          echo "Version: ${{ github.ref_name }}"
          echo "Repository: ${{ github.repository }}"
          echo ""
          echo "The action is now available for use:"
          echo "- uses: ${{ github.repository }}@${{ github.ref_name }}"
          echo ""
          echo "Documentation: https://github.com/${{ github.repository }}"